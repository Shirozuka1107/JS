The HTML and CSS have been provided for you. Feel free to explore them. When you are ready, you will need to set up your HTML variables. Get all of your .die elements and assign them to a listOfAllDice variable. Get your score inputs (the input elements in your #score-options) and score spans, and assign them to scoreInputs and scoreSpans. Assign the #current-round element to roundElement and the #current-round-rolls element to rollsElement, then do the same for your #total-score and #score-history elements. Assign your #roll-dice-btn, #keep-score-btn, #rules-btn, and .rules-container to variables with properly formatted names.
When the user clicks on the Show rules button, they should be able to toggle between showing and hiding the game rules. Create a variable isModalShowing to track the state of the game rules.
Each time the user rolls the dice, you will need to keep track of all of the dice values. Create a variable diceValuesArr to track this.
Throughout the game, you will need to keep track of the current score, total score, number of rolls and which round the player is on. Declare rolls, score, and round variables for this purpose.
Think about what the starting value of each of these variables should be. All of these variables should be able to be reassigned.

const listOfAllDice = document.querySelectorAll(".die");
const scoreInputs = document.querySelectorAll("#score-options input");
const scoreSpans = document.querySelectorAll("#score-options span");
const roundElement = document.getElementById("current-round");
const rollsElement = document.getElementById("current-round-rolls");
const totalScoreElement = document.getElementById("total-score");
const scoreHistory = document.getElementById("score-history");
const rollDiceBtn = document.getElementById("roll-dice-btn");
const keepScoreBtn = document.getElementById("keep-score-btn");
const rulesContainer = document.querySelector(".rules-container");
const rulesBtn = document.getElementById("rules-btn");

let diceValuesArr = [];
let isModalShowing = false;
let score = 0;
let round = 1; 
let rolls = 0; 

When the user clicks on the Show rules button, the rules for the game should display on the screen. When they click on the button again, the rules should be hidden.
Use an event listener to invert the value of the isModalShowing variable, toggle the visibility of the rulesContainer, and change the text of the rulesBtn to Show rules or Hide rules.
rulesBtn.addEventListener("click", () => {
  isModalShowing = !isModalShowing;

  if (isModalShowing) {
    rulesBtn.textContent = "Hide rules";
    rulesContainer.style.display = "block";
  } else {
    rulesBtn.textContent = "Show rules";
    rulesContainer.style.display = "none";
  }
});

When the user clicks on the Roll the dice button, five random die numbers should be generated and displayed on the screen.
Build out the logic such that clicking on the rollDiceBtn generates five random numbers between 1 and 6 inclusive, sets the diceValuesArr to contain only those five numbers, and displays the numbers in order in the listOfAllDice elements.
  rollDiceBtn.addEventListener("click" , () => {
   diceValuesArr = [];
  for(let i = 0; i < 5; i++) {
    const random = Math.floor(Math.random() * 6 + 1);
    diceValuesArr.push(random);
    listOfAllDice[i].textContent = random;
    }
});
