Now, you will work on opening and closing the form modal.

In earlier projects, you learned how to add and remove classes from an element with el.classList.add() and el.classList.remove(). Another method to use with the classList property is the toggle method.

The toggle method will add the class if it is not present on the element, and remove the class if it is present on the element.

Example Code
element.classList.toggle("class-to-toggle");
Add an event listener to the openTaskFormBtn element and pass in a "click" event for the first argument and an anonymous callback function for the second argument.

Inside the callback function, use the classList.toggle() method to toggle the "hidden" class on the taskForm element.

Now you can click on the "Add new Task" button and see the form modal.
openTaskFormBtn.addEventListener("click", () => {taskForm.classList.toggle("hidden")});

Now that you've worked on opening and closing the modal, it's time to get the values from the input fields, save them into the taskData array, and display them on the page.

To start, add a submit event listener to your taskForm element and pass in e as the parameter of your arrow function. Inside the curly braces, use the preventDefault() method to stop the browser from refreshing the page after submitting the form.
taskForm.addEventListener("submit", (e) => {e.preventDefault()});

Set the innerText of the addOrUpdateTaskBtn button to Update Task.
addOrUpdateTaskBtn.innerText = "Update Task";

It is time to work on the final issue. If there is a to-do task with a special character like a quote inside of the name or description of the item, the application breaks. While it appears otherwise, the correct item will appear missing.

In order to fix this, we need to create a function called removeSpecialChars that takes a string as input and removes all special characters.
const removeSpecialChars = (string) => string.replace(/['"_]/g, '')

Call removeSpecialChars on the title, and description properties in your taskObj. For the id property, only call it on the titleInput.value part of the property value.

This will remove issues with broken task data.

With that you have completed the project.
const taskObj = {
    id: `${removeSpecialChars(titleInput.value).toLowerCase().split(" ").join("-")}-${Date.now()}`,
    title: removeSpecialChars(titleInput.value),
    date: dateInput.value,
    description: removeSpecialChars(descriptionInput.value);
  };
