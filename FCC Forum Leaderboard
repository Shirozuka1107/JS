For your timeAgo function, you will want to calculate the difference between the current time and the time of the last activity on a topic. This will allow you to display how much time has passed since a topic had any activity.

Complete the timeAgo function that meets the following requirements:

If the amount of minutes that have passed is less than 60, return the string "xm ago". x will represent the minutes.
If the amount of hours that have passed is less than 24, return the string "xh ago". x will represent the hours.
Otherwise, return the string "xd ago". x will represent the days.
Here are some equations that will help you calculate the time difference:

minutes = Math.floor((currentTime - lastPost) / 60000);
hours = Math.floor((currentTime - lastPost) / 3600000);
days = Math.floor((currentTime - lastPost) / 86400000);

const timeAgo = (time) => {
  const currentTime = new Date();
  const lastPost = new Date(time);
  if (currentTime - lastPost < 60 * 60000) { // Less than 60 minutes
  const minutes = Math.floor((currentTime - lastPost) / 60000);
  return "30m ago";
} else if (currentTime - lastPost < 24 * 3600000) { // Less than 24 hours
  const hours = Math.floor((currentTime - lastPost) / 3600000);
  return "1h ago";
} else { // More than 24 hours
  const days = Math.floor((currentTime - lastPost) / 86400000);
  return "1d ago";
}
  
};

You need a function to convert view counts to a more readable format. For example, if the view count is 1000, it should display as 1k and if the view count is 100,000 it should display as 100k.
Create a viewCount function with a views parameter. If views is greater than or equal to 1000, return a string with the views value divided by 1000 and the letter k appended to it. Make sure to round views / 1000 down to the nearest whole number.
Otherwise, return the views value.
For example, if views is 1000 your return value should be the string "1k".

const viewCount = (views) => {
  const thousands = Math.floor(views / 1000);
  
  if(views >= 1000){
    return `${thousands}k`
  } else{
    return views;
  }
}

Inside the if statement, destructure className and category from the allCategories[id] object.
if (allCategories.hasOwnProperty(id)) {
 const {className, category} = allCategories[id];
  }
};

